// lib/service/socket_service.dart
import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:socket_io_client/socket_io_client.dart' as IO;

import '/service/local_notification_service.dart';

class SocketService with WidgetsBindingObserver {
  IO.Socket? _socket;
  String? _jwtToken;

  /// Singleton pattern
  static final SocketService instance = SocketService._internal();
  SocketService._internal();

  IO.Socket? get socket => _socket;

  /// Init service ‡∏û‡∏£‡πâ‡∏≠‡∏° observe lifecycle
  void init(String jwtToken) {
    _jwtToken = jwtToken;
    WidgetsBinding.instance.addObserver(this);
    connect();
  }

  /// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Socket.io
  void connect() {
    if (_jwtToken == null) {
      debugPrint("‚ö†Ô∏è No JWT token, cannot connect socket");
      return;
    }

    // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô connect ‡∏ã‡πâ‡∏≥
    if (_socket != null && _socket!.connected) {
      debugPrint('‚ö†Ô∏è Socket already connected');
      return;
    }

    const backendUrl = 'https://demoapi-production-9077.up.railway.app';

    _socket = IO.io(
      backendUrl,
      <String, dynamic>{
        'transports': ['websocket'],
        'autoConnect': false,
        'auth': {'token': _jwtToken},
      },
    );

    _socket!.connect();

    // Connection handlers
    _socket!.onConnect((_) => debugPrint('üîå Socket connected: ${_socket!.id}'));
    _socket!.onDisconnect((_) => debugPrint('‚ùå Socket disconnected'));
    _socket!.onError((err) => debugPrint('‚ö†Ô∏è Socket error: $err'));
    _socket!.onConnectError((err) => debugPrint('üö® Socket connection error: $err'));

    // -------------------------
    // Event listeners
    // -------------------------

    // Booking reminder
    _socket!.on('booking-reminder', (data) async {
      debugPrint('üì© Booking Reminder: $data');
      await _showLocalNotification(
        data,
        title: '‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°',
        body: '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏° ${data['courtName'] ?? ''} ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤ ${data['startTime'] ?? ''}',
      );
    });

    // Payment approved
    _socket!.on('payment-approved', (data) async {
      debugPrint('‚úÖ Payment Approved: $data');
      await _showLocalNotification(
        data,
        title: '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
        body: '‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏° ${data['courtName'] ?? ''} ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤ ${data['startTime'] ?? ''}',
      );
    });

    // Payment rejected
    _socket!.on('payment-reject', (data) async {
      debugPrint('‚ùå Payment Reject: $data');
      await _showLocalNotification(
        data,
        title: '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò',
        body: '‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏° ${data['courtName'] ?? ''} ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò',
      );
    });
  }

  /// ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ socket
  void disconnect() {
    if (_socket != null) {
      debugPrint('üõë Disconnecting socket...');
      _socket!.disconnect();
      _socket!.destroy();
      _socket = null;
    }
  }

  /// Lifecycle handler
  @override
  void didChangeAppLifecycleState(AppLifecycleState state) {
    debugPrint("üì± AppLifecycle changed: $state");
    if (state == AppLifecycleState.resumed) {
      // ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÅ‡∏≠‡∏õ ‚Üí reconnect
      connect();
    } else if (state == AppLifecycleState.paused) {
      // ‡∏û‡∏±‡∏ö‡∏à‡∏≠ ‚Üí disconnect ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
      disconnect();
    }
  }

  /// ‡πÅ‡∏™‡∏î‡∏á Local Notification
  Future<void> _showLocalNotification(
    Map data, {
    required String title,
    required String body,
  }) async {
    await LocalNotificationService.instance.showNotification(
      id: (data['bookingId'] ?? DateTime.now().millisecondsSinceEpoch).hashCode,
      title: title,
      body: body,
      payload: json.encode(data),
    );
  }
}